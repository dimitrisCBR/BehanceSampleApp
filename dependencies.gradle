ext.deps = [:]
def versions = [:]
//Gradle Android plugin
versions.android_gradle_plugin = "3.2.0"

//Android X
versions.appcompat = "1.0.0"
versions.material = "1.0.0-rc01"
versions.lifecycle = "2.0.0-rc01"
versions.constraint_layout = "1.1.2"
versions.navigation = "1.0.0-alpha07"

//Third-Party deps
versions.dagger = "2.15"
versions.glide = "4.7.1"
versions.retrofit = "2.3.0"
versions.okhttp = "3.9.0"
versions.timber = "4.5.1"
versions.rxjava2 = "2.1.3"
versions.rx_android = "2.0.1"
versions.kotlin = "1.3.0"

//UIextras
versions.circleImageView = "2.2.0"

//Test
versions.junit = "4.2"
versions.androidTestCore = "1.0.0"
versions.androidTestRunner = "1.1.0"
versions.espresso = "3.1.0"
versions.mockito = "1.10.19"
versions.mockitoKotlin = "2.1.0"
versions.wiremock = "2.8.0"
versions.mockWebServer = versions.okhttp

//Build Versions
def build_versions = [:]
build_versions.min_sdk = 23
build_versions.target_sdk = 28
build_versions.build_tools = "28.0.3"
ext.build_versions = build_versions

def deps = [:]

def support = [:]
support.annotations = "androidx.annotation:annotation:$versions.appcompat"
support.app_compat = "androidx.appcompat:appcompat:$versions.appcompat"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.appcompat"
support.cardview = "androidx.cardview:cardview:$versions.appcompat"
support.palette = "androidx.palette:palette:$versions.appcompat"
deps.support = support

def material = [:]
material.design = "com.google.android.material:material:$versions.material"
deps.material = material

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.lifecycle"
room.compiler = "androidx.room:room-compiler:$versions.lifecycle"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.lifecycle"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.testing = "android.arch.core:core-testing:$versions.lifecycle"
deps.lifecycle = lifecycle

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.rxAdapter = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit
deps.okhttp_logger = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"

deps.dagger = dagger

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"

deps.kotlin = kotlin

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"

def navigation = [:]
navigation.ui = "android.arch.navigation:navigation-ui:$versions.navigation"
navigation.runtime_ktx = "android.arch.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment_ktx = "android.arch.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.safeargs_plugin = "android.arch.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.navigation = navigation

def domain = [:]
domain.timber = "com.jakewharton.timber:timber:$versions.timber"
domain.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
domain.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.domain = domain

def uiExtras = [:]
uiExtras.circleImageView = "de.hdodenhof:circleimageview:$versions.circleImageView"
deps.uiExtras = uiExtras


def test = [:]
test.junit = "junit:junit:$versions.junit"
test.core = "androidx.test:core:$versions.androidTestCore"
test.runner = "androidx.test:runner:$versions.androidTestRunner"
test.rules = "androidx.test:rules:$versions.androidTestRunner"
test.espresso = "androidx.test.espresso:espresso-core:$versions.espresso"
test.mockito = "org.mockito:mockito-core:$versions.mockito"
test.mockitoKotlin = "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockitoKotlin"
test.wiremock = "com.github.tomakehurst:wiremock:$versions.wiremock"
test.mockwebserver = "com.squareup.okhttp3:mockwebserver:$versions.mockWebServer"
deps.test = test

ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

ext.addRepos = this.&addRepos